name: CI/CD

on:
  push:
    branches: [ "main" ] # 只在main分支上触发
  pull_request:
    branches: [ "main" ] # 只在main分支上触发

jobs:

  build:
    name: Build
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - goarch: amd64
            goos: linux
          - goarch: amd64
            goos: darwin
          - goarch: arm64
            goos: linux
          - goarch: arm64
            goos: darwin
    steps:
      - name: Set up Go 1.x
        uses: actions/setup-go@v2
        with:
          go-version: 1.18
        id: go

      - name: Check out code into the Go module directory
        uses: actions/checkout@v2

      - name: Get dependencies
        run: |
          cd server
          go get -v -t -d ./...

      - name: Build
        run: |
          cd server
          mkdir ui
          touch ui/index.html
          go build -v -o anylink -ldflags "-X main.CommitId=`git rev-parse HEAD`"
          ./anylink tool -v
          ls

      - name: Test coverage
        run: |
          cd server
          ls

  release:
    name: Release
    needs: build # 依赖上面的构建步骤
    runs-on: ubuntu-latest
    steps:
      - name: Create Release
        id: create_release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            server/anylink # 将你的二进制文件添加到发布中
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # GitHub Token，用于创建发布
          tag: test

